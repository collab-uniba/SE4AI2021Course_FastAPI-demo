services:

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring_network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - monitoring_network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "4444:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - monitoring_network

  # Locust for load testing
  locust:
    build:
      context: ./locust
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    environment:
      - TARGET_HOST=http://app:8000
    volumes:
      - ./locust:/mnt/locust
    depends_on:
      - app
    networks:
      - monitoring_network

networks:
  monitoring_network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: